

1. storing sqoop output data in textfile format:
================================================
delimited text is the default import format

sqoop import \
--connect jdbc:mysql://localhost/retail_db \
--username root \
--password root \
--table orders \
--target-dir 'user/data/orders_text/'
--as-textfile ;



2. storing sqoop output data in sequence file format:
=====================================================
these are binary format that store individual records in custom record-specific data type.

sqoop import \
--connect jdbc:mysql://localhost/retail_db \
--username root \
--password root \
--table orders \
--target-dir 'user/data/orders_seq/'
--as-sequencefile ;



3. storing sqoop output data in avro data file format:
=====================================================

sqoop import \
--connect jdbc:mysql://localhost/retail_db \
--username root \
--password root \
--table orders \
--target-dir 'user/data/orders_seq/'
--as-avrodatafile ;



4.storing sqoop output data in parquet file format:
===================================================

sqoop import \
--connect jdbc:mysql://localhost/retail_db \
--username root \
--password root \
--table orders \
--target-dir 'user/data/orders_parquet/' \
--as-parquetfile ;



5.sqoop output data compression:
================================

sqoop import \
--connect jdbc:mysql://localhost/retail_db \
--username root \
--password root \
--table orders \
--compression-codec Gzip\
--target-dir 'user/data/orders_compress/' ;



6.Running custom sql query in sqoop import:
===========================================

sqoop import \
--connect jdbc:mysql://localhost/retail_db \
--username root \
--password root \
--target-dir 'user/data/orders_compress/' \
--query 'select * from orders where order_status = processing' ;



7. Sqoop ‘eval’ tool:
=====================
It allows users to execute sql queries against database and preview the result in the console

sqoop eval \
--connect jdbc:mysql://localhost/retail_db \
--username root \
--password root \
--query 'select * from orders limit 5'
